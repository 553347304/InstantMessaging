// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	Admin "fim_server/service/api/group/internal/handler/Admin"
	"fim_server/service/api/group/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(src *rest.Server, serverCtx *svc.ServiceContext) {
	src.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/group/add",
				Handler: GroupAddHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/group/ban",
				Handler: GroupBanUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/friend",
				Handler: GroupFriendListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/group/group",
				Handler: GroupCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/group/group",
				Handler: GroupUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/group/:id",
				Handler: GroupInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/api/group/group/:id",
				Handler: GroupDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/history/:id",
				Handler: GroupHistoryHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/api/group/history/:id",
				Handler: GroupHistoryDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/me",
				Handler: GroupMeListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/member",
				Handler: GroupMemberHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/api/group/member",
				Handler: GroupMemberDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/group/member",
				Handler: GroupMemberAddHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/group/member/name",
				Handler: GroupMemberNameHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/group/member/role",
				Handler: GroupMemberRoleHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/search",
				Handler: GroupSearchHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/session",
				Handler: GroupSessionHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/group/top",
				Handler: GroupTopHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/valid",
				Handler: GroupValidListHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/group/valid",
				Handler: GroupValidStatusHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/valid/:id",
				Handler: GroupValidIssueHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/group/ws/chat",
				Handler: GroupChatHandler(serverCtx),
			},
		},
	)

	src.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AdminMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/api/group/group",
					Handler: Admin.GroupListHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/api/group/group",
					Handler: Admin.GroupListRemoveHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/api/group/message",
					Handler: Admin.GroupMessageListHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/api/group/message",
					Handler: Admin.GroupMessageDeleteHandler(serverCtx),
				},
			}...,
		),
	)
}

syntax = "v2"

// 通用
type (
	Empty  {}
	PageInfo {
		Key   string `form:"key,optional"`
		Page  int    `form:"page,optional"`
		Limit int    `form:"limit,optional"`
	}
	RequestDelete {
		IdList []uint64 `json:"id_list"`
	}
)

type (
	ChatHistoryRequest {
		UserId   uint64 `header:"User-ID"`
		Page     int    `form:"page,optional"`
		limit    int    `form:"limit,optional"`
		FriendId uint64 `form:"friend_id"`
	}
)

type (
	ChatSessionRequest {
		UserId uint64 `header:"User-ID"`
		Page   int    `form:"page,optional"`
		Limit  int    `form:"limit,optional"`
		Key    string `form:"key,optional"`
	}
	ChatSession {
		UserId         uint64 `header:"User-ID"`
		Avatar         string `json:"avatar"`
		Username       string `json:"username"`
		CreatedAt      string `json:"created_at"`
		MessagePreview string `json:"message_preview"`
		IsTop          bool   `json:"is_top"`
	}
	ChatSessionResponse {
		List  []ChatSession `json:"list"`
		Total int64         `json:"total"`
	}
)

type (
	UserTopRequest {
		UserId   uint64 `header:"User-ID"`
		FriendId uint64 `json:"friend_id"`
	}
	UserTopResponse  {}
)

type (
	ChatDeleteRequest {
		UserId uint64   `header:"User-ID"`
		IdList []uint64 `json:"id_list"`
	}
	ChatDeleteResponse  {}
)

type (
	ChatRequest {
		UserId uint64 `header:"User-ID"`
	}
	ChatResponse  {}
)

service chat {
	@handler ChatHistory
	get /api/chat/history (ChatHistoryRequest) returns (Empty) // 聊天记录

	@handler ChatSession
	get /api/chat/session (ChatSessionRequest) returns (ChatSessionResponse) // 最近会话列表

	@handler UserTop
	post /api/chat/user_top (UserTopRequest) returns (UserTopResponse) // 好友置顶

	@handler ChatDelete
	delete /api/chat/chat (ChatDeleteRequest) returns (ChatDeleteResponse) // 删除聊天记录

	@handler ChatWebsocket
	get /api/chat/ws/chat (ChatRequest) returns (ChatResponse) // 删除聊天记录
}

type (
	UserInfo {
		UserId   uint64 `json:"user_id"`
		Username string `json:"username"`
		Avatar   string `json:"avatar"`
	}
	ChatHistoryAdminRequest {
		SendUserId    uint64 `form:"send_user_id"`
		ReceiveUserId uint64 `form:"receive_user_id"`
		Key           string `form:"key,optional"`
		Page          int    `form:"page,optional"`
		Limit         int    `form:"limit,optional"`
	}
	UserInfoListResponse {
		List  []UserInfo `json:"list"`
		Total int64      `json:"total"`
	}
	ChatSessionAdminRequest {
		ReceiveUserId uint64 `form:"receive_user_id"`
	}
)

@server (
	group:      admin
	middleware: AdminMiddleware
)
service chat {
	@handler ChatHistoryAdmin // 用户与用户的聊天记录
	get /api/chat/admin/history (ChatHistoryAdminRequest) returns (UserInfoListResponse)

	@handler ChatSessionAdmin // 做为接受者的用户，哪些人和他聊过天
	get /api/chat/admin/session (ChatSessionAdminRequest) returns (UserInfoListResponse)

	@handler ChatHistoryDeleteAdmin // 删除聊天记录
	delete /api/chat/admin/history (RequestDelete) returns (Empty)
}


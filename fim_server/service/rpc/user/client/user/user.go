// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package user

import (
	"context"

	"fim_server/service/rpc/user/user_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CurtailResponse        = user_rpc.CurtailResponse
	Empty                  = user_rpc.Empty
	FriendListResponse     = user_rpc.FriendListResponse
	ID                     = user_rpc.ID
	IdList                 = user_rpc.IdList
	IsFriendRequest        = user_rpc.IsFriendRequest
	IsResponse             = user_rpc.IsResponse
	UserCreateRequest      = user_rpc.UserCreateRequest
	UserCreateResponse     = user_rpc.UserCreateResponse
	UserInfo               = user_rpc.UserInfo
	UserInfoResponse       = user_rpc.UserInfoResponse
	UserOnlineListResponse = user_rpc.UserOnlineListResponse

	User interface {
		UserCreate(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error)
		UserInfo(ctx context.Context, in *IdList, opts ...grpc.CallOption) (*UserInfoResponse, error)
		UserOnlineList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserOnlineListResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) UserCreate(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error) {
	client := user_rpc.NewUserClient(m.cli.Conn())
	return client.UserCreate(ctx, in, opts...)
}

func (m *defaultUser) UserInfo(ctx context.Context, in *IdList, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user_rpc.NewUserClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}

func (m *defaultUser) UserOnlineList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserOnlineListResponse, error) {
	client := user_rpc.NewUserClient(m.cli.Conn())
	return client.UserOnlineList(ctx, in, opts...)
}

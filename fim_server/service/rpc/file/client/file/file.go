// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: file.proto

package file

import (
	"context"

	"fim_server/service/rpc/file/file_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FileInfoRequest  = file_rpc.FileInfoRequest
	FileInfoResponse = file_rpc.FileInfoResponse

	File interface {
		FileInfo(ctx context.Context, in *FileInfoRequest, opts ...grpc.CallOption) (*FileInfoResponse, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

func (m *defaultFile) FileInfo(ctx context.Context, in *FileInfoRequest, opts ...grpc.CallOption) (*FileInfoResponse, error) {
	client := file_rpc.NewFileClient(m.cli.Conn())
	return client.FileInfo(ctx, in, opts...)
}
